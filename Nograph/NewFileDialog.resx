<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="colorPalette1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAF4AAAByCAYAAADavGYjAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAXcSURBVHhe7dexSpxbGIXhTQghiIgIg6SQYDGNiEVIIVhY
        iEWwtUghdiFYipDSKqSxtEhvFXIHFrkHyU14GXP2HL5PFsO7vznNnGoteIrNX/1vtXebLdvzc+3paezx
        sfbwULu7G7u5qV1c1E5Pxw4OatvbtdazDrRc5B2PYisKnii2otiKgieKrSi2ouCJYiuKrRZiq8g+Py0Z
        xVYUPFFsRbEVBU8UW1FsRcETxVYUWy3EVpF9floyiq0oeKLYimIrCp4otqLYioIniq0otlqIrSL7/LRk
        FFtR8ESxFcVWFDxRbEWxFQVPFFtRbLUQW0X2+WnJKLai4IliK4qtKHii2IpiKwqeKLai2Gohtors89OS
        UWxFwRPFVhRbUfBEsRXFVhQ8UWxFsdVCbBXZ56clo9iKgieKrSi2ouCJYiuKrSh4otiKYquF2Cqyt/bc
        45X+/q39+TP261ft/r52ezt2dVU7P68dH4/t7dUmk1oPPBLZHR5RbEWxFQRPkd3hEcVWFFtB8BTZHR5R
        bEWxFQRPkd3hEcVWFFtB8BTZHR5RbEWxFQRPkd3hEcVWFFtB8BTZHR5RbEWxFQRPkb21p/7QKfWApd+/
        x37+rH3/Xru+Hru8rJ2d1Q4Px6bT2tZWrQceiewOjyi2otgKgqfI7vCIYiuKrSB4iuwOjyi2otgKgqfI
        7vCIYiuKrSB4iuwOjyi2otgKgqfI7vCIYiuKrSB4iuytPT4+zkr9vl3qAYd+/Kh9+1b78mWs38VLJye1
        Dx/Gdndrm5u1Hngksjs8otiKYisIniK7wyOKrSi2guApsjs8otiKYisIniK7wyOKrSi2guApsjs8otiK
        YisIniK7wyOKrSi2guApsjs8otiKYisIniJ7aw8PD7PS/X2tP3SGerzS16+1z5/HPn2qHR3V9vfHdnZq
        Gxu1Hngksjs8otiKYisIniK7wyOKrSi2guApsjs8otiKYisIniK7wyOKrSi2guApsjs8otiKYisIniK7
        wyOKrSi2guApsjs8otiKYisIniJ7a3d3d7PS7W3t+nqsP3RKPWDp7Gzs+LjWH0Kl6XTs3bva+nqtBx6J
        7A6PKLai2AqCp8ju8IhiK4qtIHiK7A6PKLai2AqCp8ju8IhiK4qtIHiK7A6PKLai2AqCp8ju8IhiK4qt
        IHiK7K3d3NzMSldXtcvLsfPzWr9vl3rAoY8fa3t7tffvxyaT2tparQceiewOjyi2otgKgqfI7vCIYiuK
        rSB4iuwOjyi2otgKgqfI7vCIYiuKrSB4iuwOjyi2otgKgqfI7vCIYiuKrSB4iuwOjyi2otgKgqfI3trF
        xcWs1AOV+mNm6OSkdnRU6w+doR6vtLtb6w+hoc3N2tu3tR54JLI7PKLYimIrCJ4iu8Mjiq0otoLgKbI7
        PKLYimIrCJ4iu8Mjiq0otoLgKbI7PKLYimIrCJ4iu8Mjiq0otoLgKbI7PKLYimIrCJ4ie2unp6ezUn+s
        lA4Px3qg0v5+bTod6w+dUg9Y2toaW1+vvXlT64FHIrvDI4qtKLaC4CmyOzyi2IpiKwieIrvDI4qtKLaC
        4CmyOzyi2IpiKwieIrvDI4qtKLaC4CmyOzyi2IpiKwieIntrBwcHs1K/E5d6hKF+Xy7t7NR6oKHJpNbv
        26UecKjfxUuvX9d64JHI7vCIYiuKrSB4iuwOjyi2otgKgqfI7vCIYiuKrSB4iuwOjyi2otgKgqfI7vCI
        YiuKrSB4iuwOjyi2otgKgqfI7vCIYiuKrSB4iuytbW9vz0r9J0r9wTHUf7C0sVHrEYbW1mo9UKk/dIZ6
        vNKrV7UeeCSyOzyi2IpiKwieIrvDI4qtKLaC4CmyOzyi2IpiKwieIrvDI4qtKLaC4CmyOzyi2IpiKwie
        IrvDI4qtKLaC4CmyOzyi2IpiKwieIvu/mx/s//My+mir8zL6aKvzMvpoq/My+mir8zL6aKvzMvpoq+N5
        nud5nud5nud5nud5nud5nud5nud5nvef19o/190blUrRGbwAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAQEAAAAAAIAA1DwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAABAAAAAQAgGAAAAqmlx3gAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAOyklEQVR4Xt2beXBV
        1R3HmXa6/N1txtY6Y1urM522M+10bLV2pq1WO2KFEWURURRZElkkQFhCAiSRhEW2ICFgQBYNYcmCSUjM
        vpGFbAZlURFRQUAhyKKIcPr9HN/JvDxukpeABPKb+c59995z7z2/7/lt597z+gRKamrq9ytKSh4sLy9f
        VlpamldcXPxWUVHRXm333Gig39KhtKSkZH1VVdWwityKn/nU9BZdMKCysnJ/Y0Ojqa+vN9XV1Ub7pqKi
        wm5vNNBvKW527dplmpqaTGVF5SnxEeVTt60U5hdOoWFNbY0Re70SFZUVprm52ZQWl6ZL1+/5VLcj36+u
        rs4ypt+eF/cWyB3M7t27TUFBwUqn/A+FQzU1Nb1eeYfSsjKDvvn5+X+AgL6NjY2eDa9nMFgV5eWmdudO
        U1Zaaoo82rQHrm1oaGCb2EcHEgl4gY06QrkY7OpDryZQoFbBLTklxYS88AIjaYnwatseFAzZtmABpUT7
        wAaBwHd2ivEqxYn07GyTnZdnKkVEd0koAbqn3frg1S4QKF8jZdO2bzd/fuYZ85P+/c3fx4wxSRs3mjqR
        wuAE0yfuU6a2WMAeUkZgAwdGulrny9TZjdu2mfClS83/pk83w6KjzQ6RsJPA6XGdP1C0XPeBsAqB3xzz
        b6Nk3aYNzw0khU7Tl6ycHHPX6NHmlwMHmjuGDTO3DBpkbhXGyBoKCgu7ZA3tElCp0a6WcrlvvGGWrl9v
        np071/w3PNzcN3my6Tttmt1aEnTeiwQ6jyKgUB1PV6dfSUszCa+9ZubrfrFr1pg5yckW0ULs2rX2eOKm
        TWZjRobJys2194AQ5248B3P/19ix5hePPmrueOIJc7sPtw0dam4aMMDcI2tIWLfOEhpIshcuI4CHForF
        V9PTTeRLL5nHIiPNfZMmmQemTDEPaeQZfYfLSJCiPJROc6/Nr79ulrz6qolcvdqE6V7jExIsJgjPL19+
        GTjuzk9escKSs3rLFutuDAb96hsWZn4eoLwD1vCjfv3Mw+qvtaDuEMCFeVLo8dmzzT3jx5sHp05to3Qg
        HAk56mSN7z7rNNKzX37ZKoVCE7WdJIVQKlhMEmH2+mXLzJTERLNKRAyfM8f8VAr+VqN9mfICVnH/hAkm
        v6DAxgKnU0fwdAHMNlMmO0Qk/EcKeinu8LBwrxh/KibGbJTVxMi0UZrOeynWHWA9WMVYxZ++GpDfPP64
        +fWQIW2Uv/mxx8w/QkJMrgaCQI01+uvUHjwJwN+4yes7dpjBs2Z1SALxABKejo+3nWS0vZS4GgiXJUTI
        nZ5SPPrdk0+aX4kEzJ5geOfIkSZT2YkgGazyoN0g6EjAEgZFRXmSwGj0j4gw45YsMdOSkjw7/W0AEkJe
        fNH88emnzc8V+P6kdLhFgZPo3xXlQbsEgFYSxGwgCcSGR2bONM9r1KeuXOnZ0W8TM1atMiMXLDB3Kx1u
        UHygMOqq8qBDAoAjIUMkkBHuVzbA7Bn55xWgekJ5hzBhnlIe/fPqezDolADgSEjLyjKPioQHVA88t3hx
        jyrvQLBdowLNpd6uIigCACSQi7eqBA2V/5GavDp0rUGGIDhSi5DCvfreEYImAFCqZinNEPDI014d6gmM
        kytSYXbHCoImgAoRhue+8kprpXa9wN8KKIG9+t8e2hBAFKXcBK6BO8bob5L5ozyjT4U2VumPrZc1TFS7
        cSpcAB10x2k7Qde0Qu3C2qkdXNvA2oL2/vcgE1EkuVjgpUfgvkMbAqidd/KCwXcTwO8qHaPWj9Poh0pp
        on+8avwEPTBO01DXiSm+DkLMTJXCS5WeXtTkhmPj1UG20xQ4X9CkxyFGUZx4QlB1CgJKZ47TZoZvLmGP
        a0sd4H+PaPULN5il1IiVYgXoAfz1AoHzg1YCClQ/81L066+/NidPnrRs5cnfDxw4YC7qWPO+fbb4iNQE
        5e2DB83FixcNQvvm996zeZmIjPIbNJNrOX3ankcOHT1qCRu9cKFZsnmz+erCBQuuZXv0xAmTolke1uII
        eE73WSWL43xZU5MJXbTIHg/RNl1Ktt5D/Tj/1VfmwOHDJmHrVpOmCVhDXd0399bxcs1qUZx9wLsPdPUk
        gBejTmpra02OqsCDUhapaG625W69iPCSnbt328Jk7oYNreT4y8EjR8wYEbhEVtGeYDGOBMgu9PXn8PHj
        30yoNPoQsF3W6CVHNXCpIg0CkEuXLrUS4IR3gUER8P7775ss5X22SEljo+3cyc8/t/u79u41ERr1pnfe
        sfvHNIqMUqosB/lS7C+Xi2SrQkPoTJSsZ6FcAmE0EjV5QunTZ8/aY3nqHCRh/hP0rPc+/tgev6C2sXIV
        XA0CMqUU8slnn9nj6XJThGfkym1rdR+Egeg2AWfOnGl1AaRUBNCBFh1HXpPJDtb0dKt8CjkuAvBj15mj
        6twoWYT/iGMdC1JS7G8ImCVCRs6fbz6QdSD5ckEIIJ5A1rkvvrDHkbWyxlDd35+AD+VaWB0kIJeE7dLj
        qhCA8FXlHd8IOwJO+nx7s5hmVuY6gwVAQJr80+1PlslSLULCYvk+0ZsYgEAAcWOUCPhYJo4U+AjA/1fI
        OhBGHymur7duEUgAJBNIEQjYplSIkggEoCSB3ElQBDgfZvT3799vf3eHAJQnM6A4wIUweQRzrXrrLVO7
        Z48NZMgW3RMFUTTH5zpvvvuuPY+V8HwI8neBGGWArVIEgYDNmsI7AnjGPsUsN4hIUAR8Lj8/deqUOSvf
        dEGwqwR8dOyYma/q7NOWFnsNIGUu0DEvIVNMV4VJsCOT7PE9d70yymfqC5Ywe80aa/LumYFyTM9KULZx
        QTBQICQoAlp0o70KcghkIF0l4EMRsDg11f52QgCEFASF3v3oI/ubdIYfozgE4Bpn5f9Y4kzl/D0ffGDb
        JWVmmuFxca3PRCHaXND1ELhQz1soi2hWX915dGEw3X5QBJyWkgSP8+fP232kqwRgniiSrExCnkYIgI4A
        skScgiKji7ggBwnLlM+R40prFF3UAQhZ4km/Zx759FNLXLRAihwt91glEhwBkEPhgy5OgiIA0+f182EV
        F04CCSALDI2JMdt8WcARQJGCkAXweUrlc19+aY/5E0AQZHSr337b7jfKT7ke/8/wBS2s5IQIctfvO3TI
        PKNaJMOnEEGQt1E8h0qRQoy32U0NDfY8BHQrCzgC+GboxBHgKrwiRWUqu4o337T7jJa/BZDbZ69daxZp
        RFAWCSSAOmKdghaCyVPics8mBT4vOXPunJ1jONKJMzbASnksgIDLK7wG9Q25IgLcXOCcHoqUS9Fn580z
        +zUKTpz5IpTD5HRnvghKOfNnFOkghCAQMEcERSmwuVSXnJ1tR/SEL+5gCZTQKzMyWq0AAl2x5U8Ao88H
        lkI/PbpMAB9JkS/UcU5SCLksQMoaIQLowHEFFn/B3ylymPBgjoW++zjB34nmz4og6nUnTGRIe5TJCGV2
        vDKFEyyIPE/qO/TJJ/YYo7/JRwBzCEcAr+JXKMiWqd91fs8PmgA388Ps3ddijlXpXKa2sVLQ5XKC21qN
        FvmXIMcLEpRn9kZnaEPhw0gRKyCH4MY5/H6lonmiRpW0h1vZUdaxpSIHpZNUz78kX+Z+mDaZAfehDW3n
        KNK79pwH3DtT7sQ3TKcHIAjyJdjtcw69LiPAKYzv+zNUoYtXy2xD5N/uNRgdwt9DNXps2XezOEAtDwmc
        J7KjpDtHR7kGQqzf6p6c5xgkQnLred81gGDKccpk93yewTneKcSLFN5Z+OsBAvf9lQdtCPACN4VZOt7V
        z1vXAvQJ/98mi+SLlpcOHaFTAngVBty3Pq9O9CSwjEWKG91RHnRKAOA1U5J8mrcuXp3oKWCVfHnOk8t2
        540wCIoAXjHtkP/w4pGHenXmWsPGDvn+BgXLWvU/0LeDRVAEAKxgpYLh9WAFKB+umebg6Gj7VZpP88Gs
        VPFC0ARgBaz0YCVHTwZDrBDlh8XG2u+TLN7oaKVKZwiaAEyMRUgvq9ggRfXEZzGeSeocIoXdwg0+zXe2
        XKcjBEUAyruVWX8ZMcLcFRpqzfBafRLnWVP1LHL/I5GRnqtW2pCg6i9YEjolAOWpBrNVC9w9ZoxdiXHr
        4MHmbyEhtnBhAkMHvTp+paDgIfXyimyoTP6hadPsmoRA5R34fM+qFpbxXdESGQdYxKSoDP89blyblVmQ
        8Pvhw+2LUQigo1eaIYgtE3UP6noi/CzVHqwYW6Qq796wsE7XK0FAvxkz7HK+YOuCdglAeZailmr7kAIN
        K7PcmhwH1urcMnCg+evo0SZOszpyMh13a4Rs9ejgU9BC+5wDtKM9YJ8pMivLeL+P9WHOLHtZqOCLgqxN
        CFQcy2Cd0qi4OJMlS70qLkBhwWqr/uHhnsoD1ubdrHPTZaI1spR8TX5SNElJ0MSFbBEhvyVqM7ooh0mj
        PPtTdRxlWVS1WJVcsiY2aZrLs9CR0QPuMxZbVqAt8CABq+BYhO5NpmJ941UJgvgQbLIM1YsAlMclwjXh
        ITvYWZdAx6kZ+A0hOQpKzCVQjno9Q1v2Oc55rnPXMO9wSgeC41jCPM35CXiQwNpFYgILOVm7cFXXB8Ai
        bL6hCtC6wIABrcqzTo/98fHxZpeyA8oGXs/8geN2eqqOoZw/OM552gVe2x78SfjnxIl2BVuKKkGsoz3i
        OkPHQRAfhFndfEhEhF2K6pakjlDw48HdrcG7C2sxGpjlchtef13J+iDQIQHABUMCyyiloh/362cGiQz2
        g0013wYYGCypK/7uhU4JADyEkcZX4xXY8uQW/L7Sh18P4P8C+zojwAHzoyKEjN6gPOhTXFhcy0tDr5O9
        HQwoFrCJlSFeDXo9ioou9SksLBzFnwo9G/RisAJGg5/bJycn56aysrLz/GfQq2FvBYOuwX/Y/ndQk51Y
        /kzo1bC3gdqGv8xJ+fqoqKjvWAJMaup3FRCyIcH3d7JeC5QvLy8/ot+3WeWdZGdn/6CspCwZ3+DLEETA
        VuANblTwSYwvQ3L1arn97T61LxeZxp1qlKRc38JnJK+b3Ugg1ZWWlF6UTjka1AE+NX3Sp8//AaSZzMq9
        efeHAAAAAElFTkSuQmCC
</value>
  </data>
</root>