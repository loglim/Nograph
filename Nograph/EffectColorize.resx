<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        9h+X4vtf+rpjFaB071IAAAAASUVORK5CYII=
</value>
  </data>
</root>